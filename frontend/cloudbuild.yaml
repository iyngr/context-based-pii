# Cloud Build configuration for the Frontend service

steps:
  # Restore npm cache
  - id: 'Restore npm cache'
    name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: sh # Changed from bash to sh for Alpine compatibility
    args: ['-c', 'gsutil cp gs://${_FRONTEND_CACHE_BUCKET}/npm-cache.tar.gz . || exit 0']
    dir: 'frontend'

  # Extract npm cache (if restored)
  - id: 'Extract npm cache'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: sh # Changed from bash to sh for Alpine compatibility
    args: ['-c', 'tar -xzf npm-cache.tar.gz || exit 0']
    dir: 'frontend'

  # Install npm dependencies (will use cache if available)
  - id: 'npm install'
    name: 'node:23-alpine' # Use a Node.js image for npm commands
    args: ['npm', 'ci'] # 'npm ci' is preferred for CI/CD for consistent installs
    dir: 'frontend'

  # Build the Docker image for the frontend
  - id: 'Build frontend image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_GAR_REPOSITORY}/${_SERVICE_NAME}:${SHORT_SHA}', '.']
    dir: 'frontend'
    # Add build-time environment variables for Firebase config
    env:
      - 'REACT_APP_FIREBASE_API_KEY=${_FIREBASE_API_KEY}'
      - 'REACT_APP_FIREBASE_AUTH_DOMAIN=${_FIREBASE_AUTH_DOMAIN}'
      - 'REACT_APP_FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID}'
      - 'REACT_APP_FIREBASE_STORAGE_BUCKET=${_FIREBASE_STORAGE_BUCKET}'
      - 'REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${_FIREBASE_MESSAGING_SENDER_ID}'
      - 'REACT_APP_FIREBASE_APP_ID=${_FIREBASE_APP_ID}'

  # Save npm cache
  - id: 'Save npm cache'
    name: 'node:23-alpine' # Use node image to ensure node_modules is accessible
    entrypoint: sh # Changed from bash to sh for Alpine compatibility
    args: ['-c', 'tar -czf npm-cache.tar.gz node_modules']
    dir: 'frontend'

  - id: 'Upload npm cache'
    name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', 'npm-cache.tar.gz', 'gs://${_FRONTEND_CACHE_BUCKET}/npm-cache.tar.gz']
    dir: 'frontend'

  # Push the Docker image to the container registry
  - id: 'Push frontend image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_GAR_REPOSITORY}/${_SERVICE_NAME}:${SHORT_SHA}']

  # Deploy the frontend service to Cloud Run
  - id: 'Deploy frontend to Cloud Run'
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_GAR_REPOSITORY}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated' # Allow public access for the frontend application
      - '--min-instances=0'
      - '--max-instances=1'
      - '--service-account'
      - 'context-manager-sa@${PROJECT_ID}.iam.gserviceaccount.com'
    dir: 'frontend'
    secretEnv:
      - 'CONTEXT_MANAGER_URL'
      - '_FIREBASE_API_KEY'
      - '_FIREBASE_AUTH_DOMAIN'
      - '_FIREBASE_PROJECT_ID'
      - '_FIREBASE_STORAGE_BUCKET'
      - '_FIREBASE_MESSAGING_SENDER_ID'
      - '_FIREBASE_APP_ID'

substitutions:
  _GAR_LOCATION: 'us-central1'
  _GAR_REPOSITORY: 'ccai-services'
  _SERVICE_NAME: frontend-app # Name of the Cloud Run service
  _REGION: us-central1 # GCP region for deployment
  _FRONTEND_CACHE_BUCKET: '${PROJECT_ID}-frontend-build-cache' # New substitution for cache bucket

options:
  logging: CLOUD_LOGGING_ONLY

availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/CONTEXT_MANAGER_URL/versions/latest
    env: 'CONTEXT_MANAGER_URL'
  # Add Firebase secrets here
  - versionName: projects/${PROJECT_ID}/secrets/FIREBASE_API_KEY/versions/latest
    env: '_FIREBASE_API_KEY'
  - versionName: projects/${PROJECT_ID}/secrets/FIREBASE_AUTH_DOMAIN/versions/latest
    env: '_FIREBASE_AUTH_DOMAIN'
  - versionName: projects/${PROJECT_ID}/secrets/FIREBASE_PROJECT_ID/versions/latest
    env: '_FIREBASE_PROJECT_ID'
  - versionName: projects/${PROJECT_ID}/secrets/FIREBASE_STORAGE_BUCKET/versions/latest
    env: '_FIREBASE_STORAGE_BUCKET'
  - versionName: projects/${PROJECT_ID}/secrets/FIREBASE_MESSAGING_SENDER_ID/versions/latest
    env: '_FIREBASE_MESSAGING_SENDER_ID'
  - versionName: projects/${PROJECT_ID}/secrets/FIREBASE_APP_ID/versions/latest
    env: '_FIREBASE_APP_ID'
